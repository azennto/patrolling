行動のチャンク
- チェスの盤面を再現するタスク
-- 盤面を隠して、チェスを押させる
https://cir.nii.ac.jp/crid/1050845762814063104#references_container

自分のタスクも動かす

チャンクごとに考えている可能性がある

経過時間の累積時間を出して、急なポイントでどう移動していたかを記録しておく

リプレイのプログラムがまずい？
- ひとつ前のところで待つはずが、移動した後に、待ちになっていないか

待ちと移動のインターバル時間の分布を出す

仮説:
	waitの長い所はプランニング
		長い所の説明を聞き出す
		この中でルールとして書いてみる
			ルール化

プレイさせる
	切るところを決めておく
リプレイ中にwaitしたところで説明のウィンドウ



どこかで止めて、説明を書く
説明と仮説を書いて、必要となるオペレータを提案して、Sourが書くならどういう情報が必要になるのかというレポートを作成

1回分の説明をする
1. 次に何をしたの説明。（下に動きました、次に～～の構造に行きました）間違っていてもよい。
2. 理由を聞く。

maze_Q1_3.txtでやる。

---

理由の正答率。
リプレイを止めれるようにしておく
reason logにpositionを入れておく
行った方向にバグがあるかも
move_history

方向転換の際に時間がかかる
　0.5で切れる
	0.5で切れるのはいいけれど、長い所と短い所の分析
	0.5から先は対数スケールで考える

マルチモデルのおもちゃとして

目標を設定するオペレータ
自分だったらどういうオペレータを出すか？
　目標設定のオペレータ、サブゴーリング

10問出して、ヒストグラムを出す
熟達者とそうではない人の違い

実際次のマスのコストしか見ていないかもしれない
	次の２方向に分かれる
	マンハッタン距離で小さい > 近傍の小ささが優先？
		小さい数が長く並んでいる場合が難しいのでは

最初の計画は難しいかもしれない
	最初のreasonが計画の方略になるかもしれない
	構造はある程度最初に分かっていそう

パッと構造を見せたときに、書いてもらう
	地図みたいな話がいいのか、図形の認知がいいのか
被験者がどこを見ていたかの結果を取って、どこを見ていたかを聞く

いったん今期は、0.5秒以上悩んだ場所をポイントにして、そこにどう行くか
	マンハッタン距離を短くする方略のコスト + 上下左右のコスト + 

データの説明
下位モデル
	経由ポイントは指定する
	ポイント間は可能な方向でマンハッタンで選択、次点で近隣コスト
一つの迷路だけで説明してみる。経路の再現+思考時間(一手目を除く)
ルールベースでPythonで書く？